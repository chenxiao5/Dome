*{
	margin:0;
	padding:0;
}
html,body{
	width:100%;
	height:100%;
	font-size: 12px;
	box-sizing:border-box; -moz-box-sizing:border-box;  -webkit-box-sizing:border-box;
}
.box{
	width:100%;
	min-width: 400px;
	height:100%;
	text-align: center;
}
header{
	width:100%;
	height:20%;
	background-color: #FD1427;
	font-size: 2rem;
}
article{
	width:100%;
	height:60%;
	background-color: #E6F110;
	font-size: 2rem;
	border:20px solid #000;
	box-sizing:border-box; -moz-box-sizing:border-box;  -webkit-box-sizing:border-box;/* 基于边框进行渲染盒模型 */
/* 	overflow: hidden; 第二种高度自适应填充（使用内外边距结合扩展盒模型）--实际context高度不变 */
}
article .left{
	width:20%;
	 height: 100%;/* 第一种高度自适应填充（基于父级元素）  */
	background-color: #58F01C;
	float:left;
	margin-left: -100%;
/* 	margin-bottom: -9999px;第二种高度自适应填充（使用内外边距结合扩展盒模型）--实际context高度不变
	padding-bottom: 9999px; 第二种高度自适应填充（使用内外边距结合扩展盒模型）--实际context高度不变 */
}
article .middle{
	background-color: #743851;
	float:left;
	width:100%;
	 height: 100%;/*第一种高度自适应填充（基于父级元素） */
}
article .middle .middlebox{
	background-color: #BEBABA;
	padding:0 20%;
	 height: 100%;/*第一种高度自适应填充（基于父级元素） */
/* 	margin-bottom: -9999px;第二种高度自适应填充（使用内外边距结合扩展盒模型）--实际context高度不变
	padding-bottom: 9999px; 第二种高度自适应填充（使用内外边距结合扩展盒模型）--实际context高度不变 */
}
article .right{
	width:20%;
	height: 100%;/*第一种高度自适应填充 */
	background-color: #F210D9;
	float:right;
	margin-left:-20%;
/* 	margin-bottom: -9999px;第二种高度自适应填充（使用内外边距结合扩展盒模型）--实际context高度不变
	padding-bottom: 9999px; 第二种高度自适应填充（使用内外边距结合扩展盒模型）--实际context高度不变 */
}
footer{
	width:100%;
	height:20%;
	background-color: #142BFC;
	font-size: 2rem;
}